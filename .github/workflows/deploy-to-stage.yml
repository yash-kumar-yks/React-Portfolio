# Summary:
# Creates a new deployment on Zeit's platform, when anything is pushed in any branch (except for the "master" branch).
# Read ./README.md for extensive documentation

name: Deploy to Vercel (staging)

on:
  push:
    branches-ignore:
      - 'master'

jobs:
  # Configures the deployment environment, install dependencies (like node, npm, etc.) that are requirements for the upcoming jobs
  # Ex: Necessary to run `yarn deploy`
  setup-environment:
    name: Setup deployment environment (Ubuntu 18.04 - Node 10.x)
    runs-on: ubuntu-latest
    steps:
      # ESLint and Prettier must be in `package.json`
      - name: Install Node.js dependencies
        run: npm install

  # Starts a Zeit deployment, using the staging configuration file of the default institution
  # The default institution is the one defined in the `now.json` file (which is a symlink to the actual file)
  # N.B: It's Zeit that will perform the actual deployment
  start-staging-deployment:
    name: Starts Vercel deployment (Staging) (Ubuntu 18.04)
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
    needs: setup-environment
    steps:
      - uses: actions/checkout@v2
      - uses: amondnet/vercel-action@v19
        with:
          vercel-token: ${{ secrets.ZEIT_TOKEN }} # Required
          vercel-org-id: ${{ secrets.ORG_ID}} #Required
          vercel-project-id: ${{ secrets.PROJECT_ID}} #Required


      # # On deployment failure, add a comment to the PR
      # - name: Comment PR (Deployment failure)
      #   uses: unsplash/comment-on-pr@master
      #   if: failure()
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      #   with:
      #     msg: "[GitHub Actions]\nDeployment FAILED\n\t Commit ${{ github.sha }} failed to deploy to ${{ env.ZEIT_DEPLOYMENT_URL }} (click to see logs)"
      #     check_for_duplicate_msg: true # OPTIONAL

      # # On deployment success, add a comment to the PR
      # - name: Comment PR (Deployment success)
      #   uses: unsplash/comment-on-pr@master
      #   if: success()
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      #   with:
      #     msg: "[GitHub Actions]\nDeployment SUCCESS\n\t Commit ${{ github.sha }} successfully deployed to ${{ env.ZEIT_DEPLOYMENT_URL }}\n\tDeployment aliased as ${{ env.ZEIT_DEPLOYEMENT_ALIAS }}"
      #     check_for_duplicate_msg: true # OPTIONAL
